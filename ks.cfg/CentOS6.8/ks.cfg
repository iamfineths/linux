# System Administrator Center (v1.0 2018.05.10)
# version=DEVEL
# Firewall configuration
firewall --disabled
# Install OS instead of upgrade
install
# Use CDROM installation media
cdrom
# Root password （passwd:=######）
rootpw --iscrypted ######
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use text mode install
text
# System keyboard
keyboard us
# System language
lang en_US
# SELinux configuration
selinux --disabled
# Do not configure the X Window System
skipx
# Installation logging level
logging --level=info
# Reboot after installation
reboot
# System timezone
timezone --isUtc Asia/Shanghai
# Network information
network --activate --bootproto=static --device=eth0 --onboot=on --noipv6
network --bootproto=static --device=eth1 --onboot=no --noipv6
# System bootloader configuration
bootloader --location=mbr
# Clear the Master Boot Record
zerombr
# Partition clearing information
clearpart --all --initlabel
# Disk partitioning information
part /boot --asprimary --fstype="ext4" --ondisk=sda --size=200
part swap --fstype="swap" --ondisk=sda --size=4000
part / --asprimary --fstype="ext4" --ondisk=sda --size=46000
part /data --fstype="ext4" --grow --ondisk=sda --size=1

%packages --nobase
@core
@Core
%end

%pre
chvt 3
exec </dev/tty3> /dev/tty3
clear
read -p "
Please Enter Hostname?
" NAME /dev/tty3 2>&1
echo "${NAME}" > localhostname
echo "127.0.0.1 ${NAME} localhost" > hosts
echo "NETWORKING=yes" > network
echo "HOSTNAME=${NAME}" >> network
cat network

clear
#read -p "
#Would You Like to Setup Tomcat? [Y/n]
#" PACKAGES 2>&1
#if [ "${PACKAGES}" == "y" ] || [ "${PACKAGES}" == "Y" ];then
#    echo "TOMCAT" > softsrc
#    cat softsrc
#fi

read -p "
Would You Like to Setup which Services?

    1. - tomcat
    2. - redis
    3. - nginx
    4. - php
    5. - mysql
    6. - httpsqs
    7. - rabbitmq

    0. - Other[s]

Please Enter Your Number.
" PACKAGES 2>&1

case ${PACKAGES} in
    "1")
        echo "tomcat" > softsrc
        ;;
    "2")
        echo "redis" > softsrc
        ;;
    "3")
        echo "nginx" > softsrc
        ;;
    "4")
        echo "php" > softsrc
        ;;
    "5")
        echo "mysql" > softsrc
        ;;
    "6")
        echo "httpsqs" > softsrc
        ;;
    "7")
        echo "rabbitmq" > softsrc
        ;;
    "0")

read -p "
Please Enter The Server You Would Like To Setup, Then
Please Separate by Space, Such As \"nginx php mysql\"
" ENTER 2>&1
        echo "${ENTER}" > softsrc
        ;;

    "*"):;;
esac

chvt 1
exec < /dev/tty1 > /dev/tty1
%end

%post --nochroot

#### 从ISO复制文件到系统 ####
cp -r /mnt/source/data/. /mnt/sysimage/data/
rm -f /mnt/sysimage/etc/yum.repos.d/*.repo
#####################

cp -Rvf hosts /mnt/sysimage/etc/hosts
cp -Rvf network /mnt/sysimage/etc/sysconfig/network
#/mnt/sysimage/bin/hostname $HOSTNAME
/mnt/sysimage/bin/hostname `cat localhostname`

if [ -f softsrc ];then cp -Rvf softsrc /mnt/sysimage/etc/softsrc;fi

%end

%post

rm -rf /data/lost+found
find /data/* -type f -name "TRANS.TBL" | xargs rm -f

mkdir -p /data/{apps,backup,logs}

cp -r /data/init.d/{.ssh,.vim} /root/ && chmod 700 /root/.ssh && chmod 600 /root/.ssh/{authorized_keys,id_rsa}
cp -f /data/init.d/{CentOS-Base.repo,epel.repo} /etc/yum.repos.d/
cp -f /data/init.d/uLoginLogs.sh /etc/profile.d/

cat > /etc/resolv.conf << _EOF_
nameserver 114.114.114.114
nameserver 223.5.5.5
#options rotate
#options timeout:1 attempts:2
_EOF_

cat > /etc/modprobe.d/ipv6off.conf << _EOF_
alias net-pf-10 off
#alias ipv6 off
options ipv6 disable=1
_EOF_

cat > /etc/profile.d/99bashrc.sh << _EOF_

######### SYSTEM ADMINISTRATOR CONFIGURATION ##########
alias grep='grep --colour=always' 

export TERM=linux
export EDITOR=vim
export PS1='[\[\e[36;1m\]\u@\[\e[32;1m\]\`hostname\`\[\e[31;1m\] \t\[\e[36;1m\]\w\[\e[0m\]]# '
_EOF_

for i in anaconda-ks.cfg install.log install.log.syslog;do mv /root/${i} /root/.${i};done

cat >> /var/spool/cron/root << _EOF_
0 0 * * * /usr/sbin/ntpdate cn.pool.ntp.org >> /var/log/ntpdate.log;/sbin/clock -w
_EOF_

cat > /etc/motd << _EOF_
System Administrator (v1.0 2018.05.09)
_EOF_

cat > /etc/security/limits.d/99limits.conf << _EOF_
* soft nofile 65535
* hard nofile 65535
_EOF_

cat > /etc/profile.d/99ulimit.sh << _EOF_
ulimit -HSc unlimited
ulimit -HSn 65535
_EOF_

cat > /etc/sysctl.d/net.ipv4.conf << _EOF_
net.core.wmem_default = 8388608
net.core.rmem_default = 8388608
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.core.netdev_max_backlog = 262144
net.core.somaxconn = 4000

net.ipv4.tcp_max_tw_buckets = 60000
net.ipv4.tcp_sack = 0
net.ipv4.tcp_window_scaling = 1
net.ipv4.tcp_rmem = 4096 87380 4194304
net.ipv4.tcp_wmem = 4096 16384 4194304
net.ipv4.tcp_syncookies = 1
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.default.accept_source_route = 0
net.ipv4.tcp_max_orphans = 3276800
net.ipv4.tcp_max_syn_backlog = 262144
net.ipv4.tcp_timestamps = 0
net.ipv4.tcp_synack_retries = 1
net.ipv4.tcp_syn_retries = 1
net.ipv4.tcp_tw_recycle = 1
net.ipv4.tcp_tw_reuse = 1
net.ipv4.tcp_mem = 94500000 915000000 927000000
net.ipv4.tcp_fin_timeout = 30
net.ipv4.tcp_keepalive_time = 30
net.ipv4.tcp_keepalive_intvl = 30
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.ip_local_port_range = 1024 65000

vm.overcommit_memory = 1
_EOF_

#### 修改 SSHD 配置 ####
sed -i -e "/#UseDNS yes/c UseDNS no" \
-i -e "/PrintLastLog yes/c PrintLastLog no" \
-i -e "/^PasswordAuthentication yes/c PasswordAuthentication no" \
-i -e "/#PermitRootLogin yes/c PermitRootLogin without-password" \
-i -e "/^GSSAPIAuthentication yes/c GSSAPIAuthentication no" \
-i -e "/^#LogLevel INFO/a\LogLevel DEBUG" /etc/ssh/sshd_config

#### 修改 SUDO 配置 ####
#sed -i "/^#includedir/c includedir /etc/sudoers.d" /etc/sudoers
cat > /etc/sudoers.d/zabbix <<_EOF_
zabbix ALL=(root) NOPASSWD:/bin/netstat, /usr/local/jdk/bin/jps
_EOF_

#### 修改活跃控制台 ####
sed -i 's/ACTIVE_CONSOLES=\/dev\/tty\[1-6\]/ACTIVE_CONSOLES=\/dev\/tty\[1-2\]/g' /etc/sysconfig/init

#### 修改 POSTMAIL ####
sed -i "/^MAILTO=root/c MAILTO=\"\"" /etc/crontab

#### 修改 yum 32位软件包不安装 ####
grep -q 'exclude=\*.i?86' /etc/yum.conf || sed -i '/\[main\]/a \exclude=*.i?86\nminrate=1\ntimeout=300' /etc/yum.conf

#### YUM 安装 PACKAGES ####
[ `curl -I -m 10 -o /dev/null -s -w %{http_code} https://mirrors.aliyun.com/centos/6/extras/x86_64/` -eq 200 ] && {

    #### 安装VIM编辑器
    yum -q -y install vim-minimal vim-filesystem vim-enhanced vim-common && {
        mv /bin/vi /bin/vi.bak && ln -s /usr/bin/vim /bin/vi
    }

    #### 安装 网络调试工具
    yum -q -y install fping wget telnet lsof nc tcpdump traceroute bind-utils setuptool system-config-network-tui

    #### 安装 TOOLS PACKAGES
    yum -q -y install git lrzsz ntpdate openssh-clients rsync dos2unix lftp ftp man at mysql expect unzip strace screen tree jq

    #### 安装 系统 YUM 开发工具
    yum -q -y groupinstall "Development tools"

    #### 安装 系统依赖包_1
    yum -q -y install gcc libgcc glibc libffi-devel libxml2-devel libxslt-devel openssl-devel zlib-devel bzip2-devel ncurses-devel mysql-devel net-snmp-devel libssh2-devel unixODBC-devel libmcrypt libmcrypt-devel numactl

    #### 安装 系统依赖包_2
    yum -q -y install zeromq libsodium sqlite pcre* swig gmp* gcc gcc-c++ make cmake autoconf automake zlib-devel openldap* ncurses* libxml2* openssl* libcurl* libjpeg* freetype* libpng*

    #### 安装 系统依赖包_3
    yum -q -y install tcl tk db4 db4-devel readline-devel zeromq-dev libtermcap-devel openssl-devel gdbm-devel expat-devel libGL-devel tix libX11-devel glibc-devel tcl-devel tk-devel tix-devel bzip2-devel valgrind-devel

}

for service in $(chkconfig --list | awk '{print $1}');do
    chkconfig --level 0123456 ${service} off
    if [ ${service} = "crond" ] || [ ${service} = "network" ] || [ ${service} = "rsyslog" ] || [ ${service} = "sshd" ];then
        chkconfig --level 3 ${service} on
    fi
done

#### 安装 SALT ####
tar -zxf /data/init.d/Python-2.7.16.tar.gz -C /usr/local/ && {

    ln -sf /usr/local/Python-2.7.16/bin/salt /usr/sbin/salt
    ln -sf /usr/local/Python-2.7.16/bin/salt-api /usr/sbin/salt-api
    ln -sf /usr/local/Python-2.7.16/bin/salt-call /usr/sbin/salt-call
    ln -sf /usr/local/Python-2.7.16/bin/salt-cloud /usr/sbin/salt-cloud
    ln -sf /usr/local/Python-2.7.16/bin/salt-cp /usr/sbin/salt-cp
    ln -sf /usr/local/Python-2.7.16/bin/salt-key /usr/sbin/salt-key
    ln -sf /usr/local/Python-2.7.16/bin/salt-master /usr/sbin/salt-master
    ln -sf /usr/local/Python-2.7.16/bin/salt-minion /usr/sbin/salt-minion
    ln -sf /usr/local/Python-2.7.16/bin/salt-proxy /usr/sbin/salt-proxy
    ln -sf /usr/local/Python-2.7.16/bin/salt-run /usr/sbin/salt-run
    ln -sf /usr/local/Python-2.7.16/bin/salt-ssh /usr/sbin/salt-ssh
    ln -sf /usr/local/Python-2.7.16/bin/salt-syndic /usr/sbin/salt-syndic
    ln -sf /usr/local/Python-2.7.16/bin/salt-unity /usr/sbin/salt-unity

    \cp -f /data/init.d/salt-minion /etc/init.d/ && chmod u+x /etc/init.d/salt-minion
    chkconfig --level 3 salt-minion on
}

#### 安装 zabbix ####
tar -zxf /data/init.d/zabbix-3.2.11.tar.gz -C /usr/local/ && {

    cp -f /data/init.d/zabbix_agentd /etc/init.d/ && chmod u+x /etc/init.d/zabbix_agentd

    if ! id zabbix &>/dev/null;then useradd -M zabbix -s /sbin/nologin;fi
    install -o zabbix -g zabbix -d /data/logs/zabbix
    chkconfig --level 3 zabbix_agentd on

    chown -R zabbix.zabbix /data/conf/zabbix && chmod u+x /data/conf/zabbix/bin/*

}

#### 安装 JDK ####
mv /data/init.d/jdk-1.8.0_172.tar.gz /data/softsrc/
tar -zxf /data/softsrc/jdk-1.8.0_172.tar.gz -C /usr/local/
pushd /usr/local &>/dev/null
ln -sf jdk-1.8.0_172 jdk
echo -e 'export JAVA_HOME=/usr/local/jdk\nexport JRE_HOME=/usr/local/jdk/jre\nexport JAVA_FONTS=/usr/local/java/jre/lib/fonts\nexport CLASSPATH=$JAVA_HOME/lib:$JAVA_HOME/lib/tools.jar\nexport PATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin' > /etc/profile.d/java.sh
popd &>/dev/null

#### 初始化 GIT 环境 ####
git config --global user.name "deployment"
git config --global user.email "deployment@ithandonglin.com"

#### 安装 TOMCAT ####
for i in `cat /etc/softsrc`;do

    case ${i} in
        "tomcat")
            mv /data/init.d/apache-tomcat-8.5.31.tar.gz /data/softsrc/

            tar -zxf /data/softsrc/apache-tomcat-8.5.31.tar.gz -C /usr/local/

            pushd /usr/local &>/dev/null
            ln -sf apache-tomcat-8.5.31 tomcat

            if ! id tomcat &>/dev/null;then useradd tomcat && echo "######" | passwd --stdin tomcat;fi
            \cp -fp /data/init.d/tomcat /etc/init.d/ && chmod u+x /etc/init.d/tomcat && chkconfig --level 3 tomcat on

            mv /usr/local/apache-tomcat-8.5.31/bin/catalina.sh{,_bek}
            \cp -fp /data/init.d/catalina.sh /usr/local/apache-tomcat-8.5.31/bin/
            chmod u+x /usr/local/apache-tomcat-8.5.31/bin/catalina.sh

            echo -e 'export TOMCAT_HOME=/usr/local/tomcat\nexport PATH=$PATH:$TOMCAT_HOME/bin' > /etc/profile.d/tomcat.sh
            echo 'tomcat ALL=(ALL)  NOPASSWD: /etc/init.d/tomcat' > /etc/sudoers.d/tomcat
            popd &>/dev/null
            ;;

        "redis")
            mv /data/init.d/redis-3.2.13.tar.gz /data/softsrc/
            pushd /data/softsrc/ &>/dev/null
            tar zxvf redis-3.2.13.tar.gz && pushd redis-3.2.13 &>/dev/null && make PREFIX=/usr/local/redis-3.2.13 install && popd &>/dev/null
            mkdir /usr/local/redis-3.2.13/{log,run,conf}
            pushd /usr/local/ &>/dev/null && ln -sf redis-3.2.13 redis && popd &>/dev/null
            popd &>/dev/null

            \cp -fp /data/init.d/redis_6379.conf /usr/local/redis-3.2.13/conf/
            \cp -fp /data/init.d/redis_6379 /etc/init.d/ && chmod u+x /etc/init.d/redis_6379 && chkconfig --level 3 redis_6379 on
            ;;

        "rabbitmq")
            mv /data/init.d/{rabbitmq-server-3.6.15-1.el6.noarch.rpm,erlang-19.0.4-1.el6.x86_64.rpm,socat-1.7.3.2-1.el6.lux.x86_64.rpm} /data/softsrc/

            rpm -ivh /data/softsrc/socat-1.7.3.2-1.el6.lux.x86_64.rpm
            rpm -ivh /data/softsrc/erlang-19.0.4-1.el6.x86_64.rpm
            rpm -ivh /data/softsrc/rabbitmq-server-3.6.15-1.el6.noarch.rpm
            chkconfig --level 3 rabbitmq-server on

            /etc/init.d/rabbitmq-server start
            rabbitmq-plugins enable rabbitmq_management

            \cp -fp /data/init.d/rabbitMQ.README /data/softsrc/

            ;;

        "mysql")

            ! getent passwd mysql &>/dev/null && useradd -M mysql -s /bin/false

            HOST_NAME=`hostname`
            MYSQL_ID=`ifconfig eth0 | awk -F '[ :]+' 'NR==2 {print $4}' | awk -F "." '{print $3+100$4+100}'`
            MEMORYv=`free -g | awk '{if(/Mem/){print $2}}'`
            ((${MEMORYv}<8 && ${MEMORYv}>=7)) && MEMORY=6
            ((${MEMORYv}<16 && ${MEMORYv}>=15)) && MEMORY=12
            ((${MEMORYv}<96)) && ((${MEMORYv}>=94)) && MEMORY=76

            mv /data/init.d/mysql-5.6.46-linux-glibc2.12-x86_64.tar.gz /data/softsrc/

            pushd /data/softsrc &>/dev/null
            tar -zxvf mysql-5.6.46-linux-glibc2.12-x86_64.tar.gz -C /usr/local/
            popd &>/dev/null

            pushd /usr/local/ &>/dev/null
            ln -sf mysql-5.6.46-linux-glibc2.12-x86_64 mysql
            popd &>/dev/null

            chown -R mysql. /usr/local/{mysql,mysql-5.6.46-linux-glibc2.12-x86_64}

            install -o mysql -g mysql -d /data/mysql/conf
            chown -R mysql. /data/mysql

            \cp -fp /data/init.d/mysqld1 /etc/init.d/mysqld1 && chmod u+x /etc/init.d/mysqld1
            sed -i "s/####HOSTNAME####/${HOST_NAME}/g" /etc/init.d/mysqld1
            chkconfig --level 3 mysqld1 on

            \cp -fp /data/init.d/my1.cnf /data/mysql/conf/my1.cnf && chown mysql.mysql /data/mysql/conf/my1.cnf
            sed -i -e"s/####HOSTNAME####/${HOST_NAME}/g" -i -e"s/####MEMERY####/${MEMORY}/g" -i -e"s/####SERVERID####/${MYSQL_ID}/g" /data/mysql/conf/my1.cnf

            echo "/usr/local/mysql/lib" >>  /etc/ld.so.conf && ldconfig

            /usr/local/mysql/scripts/mysql_install_db --user=mysql --basedir=/usr/local/mysql --defaults-file=/data/mysql/conf/my1.cnf
            /etc/init.d/mysqld1 start

            chmod 755 /data/mysql/data1

            /usr/local/mysql/bin/mysqladmin -u root password '######' -S/data/mysql/data1/mysql.sock
            /usr/local/mysql/bin/mysql -uroot -S /data/mysql/data1/mysql.sock -p'######' -Bse "delete from mysql.user where password='';"
            /usr/local/mysql/bin/mysql -uroot -S /data/mysql/data1/mysql.sock -p'######' -Bse "drop database test;"
            /usr/local/mysql/bin/mysql -uroot -S /data/mysql/data1/mysql.sock -p'######' -Bse "GRANT ALL PRIVILEGES ON *.* TO '######'@'%' IDENTIFIED BY '######' WITH GRANT OPTION;"
            /usr/local/mysql/bin/mysql -uroot -S /data/mysql/data1/mysql.sock -p'######' -Bse "GRANT ALL PRIVILEGES ON *.* TO '######'@'10.20.30.%' IDENTIFIED BY '######' WITH GRANT OPTION;"
            /usr/local/mysql/bin/mysql -uroot -S /data/mysql/data1/mysql.sock -p'######' -Bse "GRANT SELECT ON *.* TO '######'@'10.20.30.%' IDENTIFIED BY '######' WITH GRANT OPTION;"
            /usr/local/mysql/bin/mysql -uroot -S /data/mysql/data1/mysql.sock -p'######' -Bse "GRANT REPLICATION SLAVE ON *.* TO '######'@'10.20.30.%' IDENTIFIED BY '######' WITH GRANT OPTION;"
            /usr/local/mysql/bin/mysql -uroot -S /data/mysql/data1/mysql.sock -p'######' -Bse "GRANT PROCESS, SUPER, REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO '######'@'localhost' IDENTIFIED BY '######' WITH GRANT OPTION;"

cat > /root/myPass.md << _EOF_
root : ######
###### : ######
###### : ######
###### : ######
###### : ######
_EOF_

cat >/usr/local/zabbix/etc/.my.cnf << _EOF_
[mysql]
user=######
password=######
socket=/data/mysql/data1/mysql.sock
[mysqladmin]
user=######
password=######
socket=/data/mysql/data1/mysql.sock
_EOF_

            ;;

        "httpsqs")
            mv /data/init.d/libevent-2.0.12-stable.tar.gz /data/softsrc
            mv /data/init.d/tokyocabinet-1.4.47.tar.gz /data/softsrc
            mv /data/init.d/httpsqs-1.7.tar.gz /data/softsrc

            pushd /data/softsrc &>/dev/null
            tar zxf libevent-2.0.12-stable.tar.gz
            tar zxf tokyocabinet-1.4.47.tar.gz
            tar zxf httpsqs-1.7.tar.gz

            pushd libevent-2.0.12-stable &>/dev/null
            ./configure --prefix=/usr/local/libevent-2.0.12-stable/ && make && make install
            popd &>/dev/null

            pushd tokyocabinet-1.4.47 &>/dev/null
            ./configure --prefix=/usr/local/tokyocabinet-1.4.47/ && make && make install
            popd &>/dev/null

            pushd httpsqs-1.7 &>/dev/null
            make && make install
            popd &>/dev/null

            mv /data/init.d/httpsqs /etc/init.d/
            chmod u+x /etc/init.d/httpsqs
            chkconfig --level 3 httpsqs on

            popd &>/dev/null

            ;;

        "nginx")

            ! getent passwd www &>/dev/null && useradd -M www -s /bin/false

            mv /data/init.d/nginx-1.16.1.tar.gz /data/softsrc/

            pushd /data/softsrc/ &>/dev/null
            tar zxf nginx-1.16.1.tar.gz

            pushd nginx-1.16.1 &>/dev/null
            ./configure --prefix=/usr/local/nginx-1.16.1 --user=www --group=www --with-http_realip_module --with-http_stub_status_module --with-http_ssl_module --with-http_flv_module --with-http_stub_status_module --with-http_gzip_static_module --with-pcre && make -j 16 && make install
            popd &>/dev/null

            pushd /usr/local &>/dev/null
            ln -sf nginx-1.16.1 nginx
            popd &>/dev/null

            mkdir /usr/local/nginx-1.16.1/conf/sites
            mkdir /data/logs/nginx

            mv /data/init.d/fcgi.conf /usr/local/nginx-1.16.1/conf/
            \cp -fp /data/init.d/nginx.conf /usr/local/nginx-1.16.1/conf/

            mv /data/init.d/nginxd /etc/init.d/ && chmod u+x /etc/init.d/nginxd && chkconfig --level 3 nginxd on

            popd &>/dev/null

            ;;

        "php")
            ! getent passwd www &>/dev/null && useradd -M www -s /bin/false

            mv /data/init.d/php5/php-5.6.40.tar.gz /data/softsrc
            mv /data/init.d/php5/redis-3.1.6.tgz /data/softsrc/

            pushd /data/softsrc &>/dev/null
            tar zxf php-5.6.40.tar.gz
            tar zxf redis-3.1.6.tgz

            pushd php-5.6.40 &>/dev/null

            ./configure -prefix=/usr/local/php-5.6.40 \
            -with-config-file-path=/usr/local/php-5.6.40/etc \
            --enable-fpm \
            --with-fpm-user=www \
            --with-fpm-group=www \
            --with-mysql=mysqlnd \
            --with-mysqli=mysqlnd \
            --with-pdo-mysql=mysqlnd \
            --with-libxml-dir \
            --with-openssl \
            --with-kerberos \
            --with-pcre-regex \
            --enable-bcmath \
            --with-bz2 \
            --enable-calendar \
            --enable-mbstring \
            --with-curl \
            --enable-exif \
            --with-gd \
            --with-jpeg-dir \
            --with-png-dir \
            --with-zlib-dir \
            --with-freetype-dir \
            --enable-gd-native-ttf \
            --with-gettext \
            --with-mhash \
            --with-mcrypt \
            --enable-pcntl \
            --with-readline \
            --enable-shmop \
            --enable-soap \
            --enable-sockets \
            --enable-sysvmsg \
            --enable-sysvsem \
            --enable-sysvshm \
            --enable-zip \
            --enable-ftp && make && make install

            popd &>/dev/null

            pushd /usr/local &>/dev/null
            ln -sf php-5.6.40 php
            popd &>/dev/null

            mv /data/init.d/php5/{php.ini,php-fpm.conf} /usr/local/php-5.6.40/etc/
            mv /data/init.d/php5/php-fpm /etc/init.d/ && chmod u+x /etc/init.d/php-fpm && chkconfig --level 3 php-fpm on

            pushd redis-3.1.6 &>/dev/null
            /usr/local/php/bin/phpize
            ./configure --with-php-config=/usr/local/php/bin/php-config && make && make install
            popd &>/dev/null

            popd &>/dev/null

            ;;

        *):;;

    esac

done

#### 添加看日志帐号 ####
useradd seeLogs && echo "######" | passwd --stdin seeLogs
install -o seeLogs -g seeLogs -d /home/seeLogs/.ssh -m 0700
touch /home/seeLogs/.ssh/authorized_keys && chmod 600 /home/seeLogs/.ssh/authorized_keys && chown seeLogs.seeLogs /home/seeLogs/.ssh/authorized_keys

#### 删除目录 ####
rm -rf /data/init.d

%end